// Test script to directly call video generation function  
// Usage: npx tsx test-video-generation.ts

import { generateVideoWithGemini } from './src/service/videoGenrate';

async function testVideoGeneration(): Promise<void> {
  console.log('üé¨ Starting video generation test...');
  console.log('‚è∞ Time started:', new Date().toISOString());
  
  const testPrompt = "A beautiful Diwali celebration with colorful fireworks lighting up the night sky, people celebrating with diyas and sparklers, festive atmosphere, 10 seconds";
  
  console.log('üìù Test prompt:', testPrompt);
  console.log('üìè Prompt length:', testPrompt.length, 'characters');
  console.log('');
  
  try {
    console.log('üöÄ Calling generateVideoWithGemini...');
    const startTime = Date.now();
    
    const videoUrl = await generateVideoWithGemini(testPrompt);
    
    const endTime = Date.now();
    const duration = ((endTime - startTime) / 1000).toFixed(2);
    
    console.log('');
    console.log('‚è∞ Generation completed in:', duration, 'seconds');
    console.log('');
    
    if (videoUrl) {
      console.log('‚úÖ SUCCESS! Video generated successfully!');
      console.log('üîó Video URL:', videoUrl);
      console.log('üìè URL length:', videoUrl.length);
      console.log('');
      console.log('üìã Test the video URL:');
      console.log(`curl -I "${videoUrl}"`);
      console.log('');
      console.log('üìã Use in social media API:');
      console.log('curl -X POST http://localhost:3000/api/social \\');
      console.log('  -H "Content-Type: application/json" \\');
      console.log('  -d \'{"messages":[{"role":"user","content":"Create a Facebook post about Diwali with this video","videoUrl":"' + videoUrl + '"}]}\'');
    } else {
      console.log('‚ùå FAILED! Video generation returned null');
      console.log('üí° Check the logs above for error details');
    }
    
  } catch (error) {
    console.log('');
    console.log('‚ùå ERROR! Video generation failed:');
    console.error(error);
    console.log('');
    console.log('üí° Troubleshooting checklist:');
    console.log('   ‚úì Google GenAI API key configured in videoGenrate.ts');
    console.log('   ‚úì Network connectivity to Google AI services');
    console.log('   ‚úì Veo 3.0 model access enabled for your API key');
    console.log('   ‚úì AWS S3 credentials configured (for upload)');
    console.log('   ‚úì tmp directory exists and is writable');
    console.log('   ‚úì @google/genai package installed and up to date');
  }
  
  console.log('');
  console.log('üèÅ Test completed at:', new Date().toISOString());
}

// Run the test
testVideoGeneration().catch((error) => {
  console.error('‚ùå Unhandled error:', error);
  process.exit(1);
});